=Address Book with Google Maps Integration

  Harvard CSCI E-168, Fall 2008
  Project: Final Project
  By: Adam Winter
  Email: awinter@fas.harvard.edu
  Due date: Wednesday, January 21, 2009
  Source: http://github.com/awinter/addressbook

Address Book with Google Maps Integration (snazzy name due in version 2.0) 
is intended as a way to keep track of the geographical movement of friends. 
Often we are at organizations or educational institutions, and we'd like to 
keep track of a peers and where they are located. This app combines the 
functionality of a shared address book with integration to Google Maps.

==Quick Start

This is a standard rails app. There are some third party gems that are required; however 
those have been unpacked into the app's vendor directory, so you do not need to worry about them.

To start the app, run:
  script/server

Note that it is important to continue running the app on localhost:3000, as that was set 
explicitly in the Google Maps API key being used. Changing that is possible, but will require
obtaining a new key.

Initially, the following users are in the system:
* admin@admin.com, password: foofoo, admin: true
* tester2@foo.com, password: foofoo, admin: false
* tester3@foo.com, password: foofoo, admin: false
* tester4@foo.com, password: foofoo, admin: false
* tester5@foo.com, password: foofoo, admin: false

If you want your own users, you can reset the database by running:
  rake db:reset

If you reset the database, you will likely want to designate at least one user as an admin 
user. To do that with your first user, use the following steps:
  script/console
  u = User.first
  u.admin = true
  u.save

Admin users can delete other users and assign friends to other users.

==Use Cases

Login:
  John is a user of the system.
  He can log in, and see his or anyone elseâ€™s address.
  He may also view a map with all address entries super-imposed on top of it.

Designate Friends:
  Barry knows all the people in the system, hence why he can see everyone's contact information.
  However a few people he considers to be his close friends.
  He can designate who his close friends are.

View Friends:
  Even though Jill had 100 classmates, she really only cares to see where her 10 closest friend are.
  When she views that map, she wants the option to just see where her friends are. 

Admin:
  Adam is an admin user of the system.
  He can perform all the functions of a user, but in addition, he can add and remove users from the system.

RSS: 
  Joe likes to keep tabs on his friends and know where they are.
  He can subscribe to an RSS feed that alerts him to any change in the address of his friends.


==Implementation

===Models
* Users - stores logins and hashed passwords links to the Addresses model. 
* Addresses - stores user location information, including cached geocodes 
* Friendships - a many to many relationship between Users, describing who are close friends with whom. 
* Address_changes - archives address change events

===Pages
* Login Page - login via email address
* New user registration Page
* Show user page
* Edit user page 
* Close Friends Page (allows you to select who your close friends are) 
* Map page (allows you to display all your friends, or just your close friends).

===Features
* Integration with Google Maps. Includes flyout windows
* Uploading. Users can upload their photos. They will be displayed in Google Markers as well as their profile.
* Feeds. The application provides an RSS Feed notifying subscribers when someone moves.

===3rd Party Gems (included in application)
* Geokit::Geocoders - used to encode addresses to coordinates
* Authlogic - used for user authentication. I was recommended to this, and felt that it had a more Ruby way of functioning, rather than Restful Authentication's generator-based approach.
* Paperclip - used to attach files in a way that integrates well with ActiveRecord

==Rails Plugins (included in application)
* ym4r/gm - used for easy integration of Google Maps with Rails

==Crow
* I'm particularly happy about how I established a many to many relationship where the same table is on both sides of that relationship.
* I also like how I was able to so easily store address changes by establishing a has_many relationship with Addresses.
* Using Git - This was my first project done using git
* Using GitHub - This was my first project using GitHub, and so the code is published out there
* I took the advice on learning from multiple sources and talked with members of the Columbus Ruby Brigade. They gave me the tip on using Authlogic over Restful Authentication.
* Also, I recently went to the CodeMash conference. There I had the opportunity to refresh my core Ruby skills and get back into the Ruby mindset. They offered a great tutorial. Check out +vendor/koans/rubykoans.tgz+. The class was taught be Jim Weirich and Joe O'Brien of EdgeCase.

==Project Files
Here are the important files that make up this project:

  .                                                   
  |____app                                            
  | |____controllers                                  
  | | |____application.rb                             # Base Controller
  | | |____feeds_controller.rb                        # RSS feeds
  | | |____friendships_controller.rb                  # Selecting Friends
  | | |____user_sessions_controller.rb                # Handles Sessions
  | | |____users_controller.rb                        # Main controller for the Address Book
  | |____models                                       
  | | |____address.rb                                 # An address associate with a user
  | | |____address_change.rb                          # An archive of each change in addresses
  | | |____user.rb                                    # A user, also a friend model due to many-to-many rel with self
  | | |____user_session.rb                            # User session
  | |____views                                        
  | | |____feeds                                      
  | | | |____index.rss.builder                        # RSS content
  | | |____friendships                                
  | | | |____index.html.erb                           # Friends selection
  | | |____layouts                                    
  | | | |____application.html.erb                     # Base layout
  | | |____user_sessions                              
  | | | |____new.html.erb                             # Login screen
  | | |____users                                      
  | | | |_____form.html.erb                           # Partial: used by show and edit
  | | | |_____info_window.html.erb                    # Partial: used by Google Map
  | | | |____edit.html.erb                            # Edit a user
  | | | |____index.html.erb                           # Show all users
  | | | |____new.html.erb                             # Create a new user
  | | | |____show.html.erb                            # Show a single user's information
  |____config                                         
  | |____gmaps_api_key.yml                            # Google Maps API key is here
  | |____initializers                                 
  | | |____geokit_config.rb                           # Google Maps API key is also here
  |____db                                             
  | |____development.sqlite3                          # Development database
  | |____migrate                                      # Migrations used in development:
  | | |____20090120145559_create_users.rb             # Users
  | | |____20090120150513_add_authlogic_fields.rb     # Authentication
  | | |____20090120155339_admin_flag.rb               # Admin User
  | | |____20090120171958_add_friends_to_users.rb     # Friends relationship
  | | |____20090120183916_break_out_address.rb        # Separating Address from User
  | | |____20090120203435_create_address_changes.rb   # Storing Address Changes separately
  | | |____20090120205930_user_photo.rb               # Adding a photo to the user
  |____doc                                            
  | |____Google Maps API.pdf                          # Official record of Google Maps API key
  |____README.rdoc                                    # This readme file
  |____vendor                                         
  | |____gems                                         
  | | |____andre-geokit-1.2.0                         # Geocodes addresses
  | | |____authlogic-1.3.9                            # Provides user authentication
  | | |____thoughtbot-paperclip-2.2.2                 # Provides easy file uploads
  | |____plugins                                      
  | | |____ym4r_gm                                    # Makes integration with Google Maps even easier
